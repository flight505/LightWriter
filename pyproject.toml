[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lightwriter_cli"
version = "0.1.0"
description = "CLI tool for processing academic papers"
requires-python = ">=3.11"
dependencies = [
    # Core packages
    "termcolor",
    "openai",
    "pandas",
    "numpy",
    "torch",  # Required by marker-pdf
    "marker-pdf==1.2.7",    
    "requests",
    "xxhash",
    "aioboto3",
    "ruff",
    "aiohttp",  # For async HTTP requests

    "sentence-transformers",
    "scikit-learn",
    "numpy",
    
    # PDF processing
    "PyMuPDF",
    "PyPDF2",
    "pdf2doi",
    "crossrefapi",
    "scholarly",
    "arxiv>=2.1.3",
    
    # RAG packages
    "lightrag-hku>=1.1.3",
    "ollama",
    "tiktoken",
    "nano-vectordb",
    "networkx",
    
    # Visualization
    "plotly",   
    "matplotlib",
    "graphviz",
    "pydot",
    "pyvis",

    # CLI
    "typer",
    "questionary",
    "rich",
    
    # Development
    "python-dotenv",
    "python-docx",
    "pytest",
    "pytest-cov",
    "pytest-asyncio",  # For async tests
    "coverage",
    "beautifulsoup4",
    "mypy", # for static type checking
]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"  # Set default fixture loop scope

[tool.hatch.build.targets.wheel]
packages = ["src"] 

[tool.ruff]
line-length = 120

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError"
]
